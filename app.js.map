{"version":3,"sources":["webpack:///webpack/bootstrap f80f1acef6354442b7c1","webpack:///./server/server.ts","webpack:///external \"path\"","webpack:///./server/api/api.service.ts","webpack:///./server/bootstrap.ts","webpack:///./server/common/global.service.ts","webpack:///./server/db/db.client.ts","webpack:///external \"body-parser\"","webpack:///external \"cassandra-driver\"","webpack:///external \"cookie-parser\"","webpack:///external \"express\"","webpack:///external \"http\""],"names":[],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/Users/kosmos/Project/fullstack_boilerplate\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f80f1acef6354442b7c1\n **/","import { Server } from './bootstrap';\nimport {GlobalService} from './common/global.service';\n\nvar $server = new Server(new GlobalService());\n$server.bootstrap();\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./server/server.ts\n **/","module.exports = require(\"path\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"path\"\n ** module id = 1\n ** module chunks = 0\n **/","import { DBClient } from './../db/db.client';\nimport { GlobalService } from '../common/global.service';\nimport * as path from 'path';\nimport * as express from 'express';\nimport * as bodyParser from 'body-parser';\nimport { Settings } from '../../app/common/config';\nexport class APIHandler {\n    constructor(\n        private globalService: GlobalService,\n        private db: DBClient\n    ) { }\n    routes() {\n        this.globalService.app.get('**', (req, res, next) => {\n            res.sendFile(path.resolve(__dirname + '/../../public/index.html'));\n        });\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./server/api/api.service.ts\n **/","import * as path from 'path';\nimport * as express from 'express';\nimport * as bodyParser from 'body-parser';\nimport * as cookieParser from 'cookie-parser';\nimport { GlobalService } from './common/global.service';\nimport { APIHandler } from './api/api.service';\nimport * as http from 'http';\nimport {DBClient} from './db/db.client';\n\nexport class Server {\n    private app: any;\n    private API: APIHandler;\n    private $http;\n    private dbClient: DBClient;\n    constructor (\n        private globalService: GlobalService\n    ) {\n        this.dbClient = new DBClient(this.globalService);\n        this.API = new APIHandler(this.globalService, this.dbClient);\n    }\n    bootstrap() {\n        this.app = express();\n        this.$http = http['Server'](this.app);\n        this.app.use(bodyParser.json());\n        this.app.use(cookieParser());\n        this.app.use(express.static(path.join(__dirname, '../public')));\n        this.globalService.app = this.app;\n        //this.dbClient.connect();\n        this.API.routes();\n        this.$http.listen(3000, () => {\n            console.log('nodemon test');\n        });\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./server/bootstrap.ts\n **/","import * as EventEmitter from 'events';\nexport class GlobalService {\n    public test: string = 'empty';\n    public app: any;\n    public static_folder: any;\n    public DBClient: any;\n    constructor() {\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./server/common/global.service.ts\n **/","import { GlobalService } from './../common/global.service';\nimport {Observable} from 'rxjs';\nlet cassandra = require('cassandra-driver');\nexport class DBClient {\n    private client: any;\n    constructor(\n        private globalService: GlobalService\n    ) {\n        this.client = this.globalService.DBClient;\n    }\n    connect() {\n        this.client = new cassandra.Client({ contactPoints: ['127.0.0.1'] });\n        this.client.connect((err, result) => {\n            if (err) {\n                return console.log('client connect error');\n            }\n        });\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./server/db/db.client.ts\n **/","module.exports = require(\"body-parser\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"body-parser\"\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = require(\"cassandra-driver\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"cassandra-driver\"\n ** module id = 7\n ** module chunks = 0\n **/","module.exports = require(\"cookie-parser\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"cookie-parser\"\n ** module id = 8\n ** module chunks = 0\n **/","module.exports = require(\"express\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"express\"\n ** module id = 9\n ** module chunks = 0\n **/","module.exports = require(\"http\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"http\"\n ** module id = 10\n ** module chunks = 0\n **/"],"sourceRoot":""}